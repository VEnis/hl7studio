// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package io.github.venis.hl7studio.service.impl;

import io.github.venis.hl7studio.model.Hl7ConnectorDualPortMllpReceiver;
import io.github.venis.hl7studio.repository.Hl7ConnectorDualPortMllpReceiverRepository;
import io.github.venis.hl7studio.service.impl.Hl7ConnectorDualPortMllpReceiverServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Hl7ConnectorDualPortMllpReceiverServiceImpl_Roo_Service_Impl {
    
    declare @type: Hl7ConnectorDualPortMllpReceiverServiceImpl: @Service;
    
    declare @type: Hl7ConnectorDualPortMllpReceiverServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private Hl7ConnectorDualPortMllpReceiverRepository Hl7ConnectorDualPortMllpReceiverServiceImpl.hl7ConnectorDualPortMllpReceiverRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param hl7ConnectorDualPortMllpReceiverRepository
     */
    @Autowired
    public Hl7ConnectorDualPortMllpReceiverServiceImpl.new(Hl7ConnectorDualPortMllpReceiverRepository hl7ConnectorDualPortMllpReceiverRepository) {
        setHl7ConnectorDualPortMllpReceiverRepository(hl7ConnectorDualPortMllpReceiverRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return Hl7ConnectorDualPortMllpReceiverRepository
     */
    public Hl7ConnectorDualPortMllpReceiverRepository Hl7ConnectorDualPortMllpReceiverServiceImpl.getHl7ConnectorDualPortMllpReceiverRepository() {
        return hl7ConnectorDualPortMllpReceiverRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param hl7ConnectorDualPortMllpReceiverRepository
     */
    public void Hl7ConnectorDualPortMllpReceiverServiceImpl.setHl7ConnectorDualPortMllpReceiverRepository(Hl7ConnectorDualPortMllpReceiverRepository hl7ConnectorDualPortMllpReceiverRepository) {
        this.hl7ConnectorDualPortMllpReceiverRepository = hl7ConnectorDualPortMllpReceiverRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param hl7ConnectorDualPortMllpReceiver
     */
    @Transactional
    public void Hl7ConnectorDualPortMllpReceiverServiceImpl.delete(Hl7ConnectorDualPortMllpReceiver hl7ConnectorDualPortMllpReceiver) {
        getHl7ConnectorDualPortMllpReceiverRepository().delete(hl7ConnectorDualPortMllpReceiver);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Hl7ConnectorDualPortMllpReceiver> Hl7ConnectorDualPortMllpReceiverServiceImpl.save(Iterable<Hl7ConnectorDualPortMllpReceiver> entities) {
        return getHl7ConnectorDualPortMllpReceiverRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void Hl7ConnectorDualPortMllpReceiverServiceImpl.delete(Iterable<Long> ids) {
        List<Hl7ConnectorDualPortMllpReceiver> toDelete = getHl7ConnectorDualPortMllpReceiverRepository().findAll(ids);
        getHl7ConnectorDualPortMllpReceiverRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Hl7ConnectorDualPortMllpReceiver
     */
    @Transactional
    public Hl7ConnectorDualPortMllpReceiver Hl7ConnectorDualPortMllpReceiverServiceImpl.save(Hl7ConnectorDualPortMllpReceiver entity) {
        return getHl7ConnectorDualPortMllpReceiverRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Hl7ConnectorDualPortMllpReceiver
     */
    public Hl7ConnectorDualPortMllpReceiver Hl7ConnectorDualPortMllpReceiverServiceImpl.findOne(Long id) {
        return getHl7ConnectorDualPortMllpReceiverRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Hl7ConnectorDualPortMllpReceiver
     */
    public Hl7ConnectorDualPortMllpReceiver Hl7ConnectorDualPortMllpReceiverServiceImpl.findOneForUpdate(Long id) {
        return getHl7ConnectorDualPortMllpReceiverRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Hl7ConnectorDualPortMllpReceiver> Hl7ConnectorDualPortMllpReceiverServiceImpl.findAll(Iterable<Long> ids) {
        return getHl7ConnectorDualPortMllpReceiverRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Hl7ConnectorDualPortMllpReceiver> Hl7ConnectorDualPortMllpReceiverServiceImpl.findAll() {
        return getHl7ConnectorDualPortMllpReceiverRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long Hl7ConnectorDualPortMllpReceiverServiceImpl.count() {
        return getHl7ConnectorDualPortMllpReceiverRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Hl7ConnectorDualPortMllpReceiver> Hl7ConnectorDualPortMllpReceiverServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getHl7ConnectorDualPortMllpReceiverRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Hl7ConnectorDualPortMllpReceiver> Hl7ConnectorDualPortMllpReceiverServiceImpl.getEntityType() {
        return Hl7ConnectorDualPortMllpReceiver.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> Hl7ConnectorDualPortMllpReceiverServiceImpl.getIdType() {
        return Long.class;
    }
    
}
