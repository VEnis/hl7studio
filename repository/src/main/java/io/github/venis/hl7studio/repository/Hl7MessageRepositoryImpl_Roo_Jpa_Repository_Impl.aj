// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package io.github.venis.hl7studio.repository;

import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.github.venis.hl7studio.model.Hl7Message;
import io.github.venis.hl7studio.model.QHl7Message;
import io.github.venis.hl7studio.repository.Hl7MessageRepositoryCustom;
import io.github.venis.hl7studio.repository.Hl7MessageRepositoryImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Hl7MessageRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare parents: Hl7MessageRepositoryImpl implements Hl7MessageRepositoryCustom;
    
    declare @type: Hl7MessageRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.TITLE = "title";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.RAW = "raw";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_SENDING_APPLICATION = "hl7SendingApplication";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_SENDING_FACILITY = "hl7SendingFacility";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_RECEIVING_APPLICATION = "hl7ReceivingApplication";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_RECEIVING_FACILITY = "hl7ReceivingFacility";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_DATE_TIME_OF_MESSAGE = "hl7DateTimeOfMessage";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_MESSAGE_TYPE = "hl7MessageType";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_TRIGGER_EVENT = "hl7TriggerEvent";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_CONTROL_ID = "hl7ControlId";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_PROCESSING_ID = "hl7ProcessingId";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Hl7MessageRepositoryImpl.HL_7_VERSION_ID = "hl7VersionId";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Hl7Message> Hl7MessageRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QHl7Message hl7Message = QHl7Message.hl7Message;
        
        JPQLQuery<Hl7Message> query = from(hl7Message);
        
        Path<?>[] paths = new Path<?>[] {hl7Message.title,hl7Message.raw,hl7Message.hl7SendingApplication,hl7Message.hl7SendingFacility,hl7Message.hl7ReceivingApplication,hl7Message.hl7ReceivingFacility,hl7Message.hl7DateTimeOfMessage,hl7Message.hl7MessageType,hl7Message.hl7TriggerEvent,hl7Message.hl7ControlId,hl7Message.hl7ProcessingId,hl7Message.hl7VersionId};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(TITLE, hl7Message.title)
			.map(RAW, hl7Message.raw)
			.map(HL_7_SENDING_APPLICATION, hl7Message.hl7SendingApplication)
			.map(HL_7_SENDING_FACILITY, hl7Message.hl7SendingFacility)
			.map(HL_7_RECEIVING_APPLICATION, hl7Message.hl7ReceivingApplication)
			.map(HL_7_RECEIVING_FACILITY, hl7Message.hl7ReceivingFacility)
			.map(HL_7_DATE_TIME_OF_MESSAGE, hl7Message.hl7DateTimeOfMessage)
			.map(HL_7_MESSAGE_TYPE, hl7Message.hl7MessageType)
			.map(HL_7_TRIGGER_EVENT, hl7Message.hl7TriggerEvent)
			.map(HL_7_CONTROL_ID, hl7Message.hl7ControlId)
			.map(HL_7_PROCESSING_ID, hl7Message.hl7ProcessingId)
			.map(HL_7_VERSION_ID, hl7Message.hl7VersionId);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, hl7Message);
    }
    
}
