// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package io.github.venis.hl7studio.service.impl;

import io.github.venis.hl7studio.model.Hl7ConnectorSinglePortMllpSender;
import io.github.venis.hl7studio.repository.Hl7ConnectorSinglePortMllpSenderRepository;
import io.github.venis.hl7studio.service.impl.Hl7ConnectorSinglePortMllpSenderServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Hl7ConnectorSinglePortMllpSenderServiceImpl_Roo_Service_Impl {
    
    declare @type: Hl7ConnectorSinglePortMllpSenderServiceImpl: @Service;
    
    declare @type: Hl7ConnectorSinglePortMllpSenderServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private Hl7ConnectorSinglePortMllpSenderRepository Hl7ConnectorSinglePortMllpSenderServiceImpl.hl7ConnectorSinglePortMllpSenderRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param hl7ConnectorSinglePortMllpSenderRepository
     */
    @Autowired
    public Hl7ConnectorSinglePortMllpSenderServiceImpl.new(Hl7ConnectorSinglePortMllpSenderRepository hl7ConnectorSinglePortMllpSenderRepository) {
        setHl7ConnectorSinglePortMllpSenderRepository(hl7ConnectorSinglePortMllpSenderRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return Hl7ConnectorSinglePortMllpSenderRepository
     */
    public Hl7ConnectorSinglePortMllpSenderRepository Hl7ConnectorSinglePortMllpSenderServiceImpl.getHl7ConnectorSinglePortMllpSenderRepository() {
        return hl7ConnectorSinglePortMllpSenderRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param hl7ConnectorSinglePortMllpSenderRepository
     */
    public void Hl7ConnectorSinglePortMllpSenderServiceImpl.setHl7ConnectorSinglePortMllpSenderRepository(Hl7ConnectorSinglePortMllpSenderRepository hl7ConnectorSinglePortMllpSenderRepository) {
        this.hl7ConnectorSinglePortMllpSenderRepository = hl7ConnectorSinglePortMllpSenderRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param hl7ConnectorSinglePortMllpSender
     */
    @Transactional
    public void Hl7ConnectorSinglePortMllpSenderServiceImpl.delete(Hl7ConnectorSinglePortMllpSender hl7ConnectorSinglePortMllpSender) {
        getHl7ConnectorSinglePortMllpSenderRepository().delete(hl7ConnectorSinglePortMllpSender);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Hl7ConnectorSinglePortMllpSender> Hl7ConnectorSinglePortMllpSenderServiceImpl.save(Iterable<Hl7ConnectorSinglePortMllpSender> entities) {
        return getHl7ConnectorSinglePortMllpSenderRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void Hl7ConnectorSinglePortMllpSenderServiceImpl.delete(Iterable<Long> ids) {
        List<Hl7ConnectorSinglePortMllpSender> toDelete = getHl7ConnectorSinglePortMllpSenderRepository().findAll(ids);
        getHl7ConnectorSinglePortMllpSenderRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Hl7ConnectorSinglePortMllpSender
     */
    @Transactional
    public Hl7ConnectorSinglePortMllpSender Hl7ConnectorSinglePortMllpSenderServiceImpl.save(Hl7ConnectorSinglePortMllpSender entity) {
        return getHl7ConnectorSinglePortMllpSenderRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Hl7ConnectorSinglePortMllpSender
     */
    public Hl7ConnectorSinglePortMllpSender Hl7ConnectorSinglePortMllpSenderServiceImpl.findOne(Long id) {
        return getHl7ConnectorSinglePortMllpSenderRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Hl7ConnectorSinglePortMllpSender
     */
    public Hl7ConnectorSinglePortMllpSender Hl7ConnectorSinglePortMllpSenderServiceImpl.findOneForUpdate(Long id) {
        return getHl7ConnectorSinglePortMllpSenderRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Hl7ConnectorSinglePortMllpSender> Hl7ConnectorSinglePortMllpSenderServiceImpl.findAll(Iterable<Long> ids) {
        return getHl7ConnectorSinglePortMllpSenderRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Hl7ConnectorSinglePortMllpSender> Hl7ConnectorSinglePortMllpSenderServiceImpl.findAll() {
        return getHl7ConnectorSinglePortMllpSenderRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long Hl7ConnectorSinglePortMllpSenderServiceImpl.count() {
        return getHl7ConnectorSinglePortMllpSenderRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Hl7ConnectorSinglePortMllpSender> Hl7ConnectorSinglePortMllpSenderServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getHl7ConnectorSinglePortMllpSenderRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Hl7ConnectorSinglePortMllpSender> Hl7ConnectorSinglePortMllpSenderServiceImpl.getEntityType() {
        return Hl7ConnectorSinglePortMllpSender.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> Hl7ConnectorSinglePortMllpSenderServiceImpl.getIdType() {
        return Long.class;
    }
    
}
